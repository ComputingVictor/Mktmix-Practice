df_mmm <- read_csv("data/mktmix.csv")
#'**LIBRERIAS.Cargamos las librerias que necesesitaremos para la realización de la práctica.**
library(readr)
library(janitor)
library(dplyr)
library(ggplot2)
library(tidyr)
library(viridis)
library(purrr)
#'**LIBRERIAS.Cargamos las librerias que necesesitaremos para la realización de la práctica.**
library(readr)
library(janitor)
library(dplyr)
library(ggplot2)
install.packages(c("bslib", "callr", "car", "cli", "cpp11", "crayon", "curl", "data.table", "digest", "DT", "e1071", "emmeans", "evaluate", "future", "future.apply", "gert", "ggplot2", "ggrepel", "ggsignif", "isoband", "jsonlite", "lme4", "lpSolve", "lubridate", "maptools", "markdown", "Matrix", "minqa", "mnormt", "openssl", "pkgload", "processx", "ps", "psych", "purrr", "RcppEigen", "readr", "rlang", "rmarkdown", "rstatix", "sp", "sys", "testthat", "tinytex", "vctrs", "vroom", "xfun", "xts", "yaml", "zip", "zoo"))
install.packages(c("bslib", "callr", "car", "cli", "cpp11", "crayon", "curl", "data.table", "digest", "DT", "e1071", "emmeans", "evaluate", "future", "future.apply", "gert", "ggplot2", "ggrepel", "ggsignif", "isoband", "jsonlite", "lme4", "lpSolve", "lubridate", "maptools", "markdown", "Matrix", "minqa", "mnormt", "openssl", "pkgload", "processx", "ps", "psych", "purrr", "RcppEigen", "readr", "rlang", "rmarkdown", "rstatix", "sp", "sys", "testthat", "tinytex", "vctrs", "vroom", "xfun", "xts", "yaml", "zip", "zoo"))
install.packages(c("bslib", "callr", "car", "cli", "cpp11", "crayon", "curl", "data.table", "digest", "DT", "e1071", "emmeans", "evaluate", "future", "future.apply", "gert", "ggplot2", "ggrepel", "ggsignif", "isoband", "jsonlite", "lme4", "lpSolve", "lubridate", "maptools", "markdown", "Matrix", "minqa", "mnormt", "openssl", "pkgload", "processx", "ps", "psych", "purrr", "RcppEigen", "readr", "rlang", "rmarkdown", "rstatix", "sp", "sys", "testthat", "tinytex", "vctrs", "vroom", "xfun", "xts", "yaml", "zip", "zoo"))
install.packages(c("bslib", "callr", "car", "cli", "cpp11", "crayon", "curl", "data.table", "digest", "DT", "e1071", "emmeans", "evaluate", "future", "future.apply", "gert", "ggplot2", "ggrepel", "ggsignif", "isoband", "jsonlite", "lme4", "lpSolve", "lubridate", "maptools", "markdown", "Matrix", "minqa", "mnormt", "openssl", "pkgload", "processx", "ps", "psych", "purrr", "RcppEigen", "readr", "rlang", "rmarkdown", "rstatix", "sp", "sys", "testthat", "tinytex", "vctrs", "vroom", "xfun", "xts", "yaml", "zip", "zoo"))
#'**LIBRERIAS.Cargamos las librerias que necesesitaremos para la realización de la práctica.**
library(readr)
library(janitor)
library(dplyr)
library(ggplot2)
library(tidyr)
library(viridis)
library(purrr)
df_mmm <- read_csv("data/mktmix.csv")
df_mmm <- read_csv("./")
df_mmm <- read_csv("./data/mktmix.csv")
df_mmm <- read_csv("../data/mktmix.csv")
df_mmm <-  clean_names(df_mmm)
names(df_mmm)
nrow(df_mmm)
ncol(df_mmm)
class(df_mmm$base_price)
class(df_mmm$discount)
conversion<- !is.na(df_mmm$newspaper_inserts)
df_mmm$newspaper_inserts <- as.numeric(conversion)
glimpse(df_mmm)
df_mmm %>%
distinct(website_campaign)
prueba <- df_mmm %>% mutate(website_campaign = ifelse(is.na(website_campaign),10, website_campaign))
tail(prueba)
df_mmm <-prueba  %>% mutate(
Facebook = ifelse(website_campaign %in% 'Facebook', 1,0),
Twitter= ifelse(website_campaign %in% 'Twitter', 1,0),
website_campaign =ifelse(website_campaign %in% 'Website Campaign', 1,0))
head(df_mmm)
df_mmm %>%
summarise(sum(Facebook), sum(Twitter))
df_mmm %>%
select(tv, everything()) %>%
filter(tv <50) %>% nrow()
df_mmm_1 <- df_mmm %>%
mutate(radio = ifelse(is.na(radio),0, radio))
df_mmm_1 %>%
mutate(invertido_radio= as.integer((radio!=0))) %>%
group_by(invertido_radio) %>%
summarise(mediaTV = mean(tv))
ggplot(df_mmm) +
geom_line(aes(x=(1:104) ,y= new_vol_sales))
ggplot(df_mmm) +
geom_histogram(aes(x=new_vol_sales ), col = 'black',,fill ='darkgreen')
ggplot(df_mmm) +
geom_boxplot(aes(x=new_vol_sales))
df_media <- df_mmm %>%
select(tv, radio, stout)
head(df_media)
df_media <- df_media %>%
pivot_longer(everything())
#'Construimos los gráficos.
#'
#'
ggplot(df_media) +
geom_line(aes(x= 1:312, y = value),size=1) +
facet_wrap( ~ name  ,dir = 'v' , strip.position = 'right',scales = 'free')
df_mmm %>%
select(in_store, new_vol_sales) %>%
ggplot(aes(x=in_store, y = new_vol_sales)) +
geom_point()+
geom_smooth( method = 'lm')
ggplot(df_mmm) +
geom_point(aes(x=in_store, y = new_vol_sales ,colour= as.factor(newspaper_inserts)))
ggplot(df_mmm,aes(x=in_store, y = new_vol_sales)) +
geom_point(aes(x=in_store, y = new_vol_sales,col= tv)) +
scale_color_viridis(discrete= FALSE)
df_mmm %>%
mutate(discount_yesno = as.logical((discount >0))) %>%
group_by(discount_yesno) %>% summarise(media_base_price = mean(base_price)) %>%
ggplot(aes(x=discount_yesno, y= media_base_price),scale= 'free') +
geom_bar(stat="identity", fill='darkgreen')
inserta<- function(un_vector_character){
df_aux<- df_mmm %>%select(un_vector_character, new_vol_sales)
my_model <- lm(new_vol_sales ~ ., data = df_aux)
resumen<- summary(my_model)$adj.r.squared
return(resumen)
}
inserta(c('tv', 'radio'))
lista <- list(c("base_price", "radio", "tv", "stout"),c("base_price", "in_store", "discount", "radio", "tv", "stout"),c("in_store", "discount"))
lista
map_dbl(lista, inserta)
#'Observamos que el mejor modelo es el segundo, que contiene _'base price','in store' , 'discount', 'radio', 'tv' y 'stout'_ al tener el R cuadrado ajustado más alto, por lo que tiene menor error que el resto de modelos.
#'Observamos que el mejor modelo es el segundo, que contiene _'base price','in store' , 'discount', 'radio', 'tv' y 'stout'_ al tener el R cuadrado ajustado más alto, por lo que tiene menor error que el resto de modelos.
#'Observamos que el mejor modelo es el segundo, que contiene _'base price','in store' , 'discount', 'radio', 'tv' y 'stout'_ al tener el R cuadrado ajustado más alto, por lo que tiene menor error que el resto de modelos.
#'Observamos que el mejor modelo es el segundo, que contiene _'base price','in store' , 'discount', 'radio', 'tv' y 'stout'_ al tener el R cuadrado ajustado más alto, por lo que tiene menor error que el resto de modelos.
